&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если НЕ ЗначениеЗаполнено(ПараметрыСеанса.МОД_ИмяПоследнейФормы) Тогда
		Сообщить(НСтр("ru = 'Не определена форма для модификации'"));
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Заголовок = ПараметрыСеанса.МОД_ИмяПоследнейФормы;
	ИмяМодифицируемойФормы = ПараметрыСеанса.МОД_ИмяПоследнейФормы;
	
	ЗагрузитьИзмененияФормы();
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	Если ЗавершениеРаботы = Истина Тогда
		Возврат;
	КонецЕсли;
	
	Если Модифицированность Тогда
		Отказ = Истина;
		ОбработчикПродолжения = Новый ОписаниеОповещения("ПередЗакрытиемПослеПодтверждения", ЭтаФорма);
		ПоказатьВопрос(ОбработчикПродолжения, НСтр("ru = 'Несохраненные изменения будут потеряны. Продолжить?'"), РежимДиалогаВопрос.ДаНет);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытиемПослеПодтверждения(РезультатВопроса, ДополнительныеПараметры) Экспорт
	Если РезультатВопроса = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли;

	Модифицированность = Ложь;
	Закрыть();
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьJSON(Команда)
	ТекстJSON = ПолучитьJSONНаСервере();

	ТекстовыйДокумент = Новый ТекстовыйДокумент;
	ТекстовыйДокумент.УстановитьТекст(ТекстJSON);
	ТекстовыйДокумент.Показать(ИмяМодифицируемойФормы);
КонецПроцедуры

&НаСервере
Функция ПолучитьJSONНаСервере()
	ОбъектОбработки = РеквизитФормыВЗначение("Объект");
	Возврат ОбъектОбработки.ПреобразоватьТабличныйДокументВJSON(ТабличныйДокумент);
КонецФункции

&НаСервере
Функция ПрочитатьJSONТабличногоДокумента(Текст)
	ОбъектОбработки = РеквизитФормыВЗначение("Объект");
	Возврат ОбъектОбработки.ПреобразоватьJSONВТабличныйДокумент(Текст);
КонецФункции

&НаКлиенте
Процедура Нормализовать(Команда)
	НормализоватьНаСервере();
КонецПроцедуры

&НаСервере
Функция НормализоватьНаСервере()
	ТекстJSON = ПолучитьJSONНаСервере();
	ТабличныйДокумент = ПрочитатьJSONТабличногоДокумента(ТекстJSON);
КонецФункции

&НаКлиенте
Процедура ЗаписатьИзменения(Команда)
	ЗаписатьИзмененияНаСервере();
КонецПроцедуры

&НаСервере
Процедура ЗаписатьИзмененияНаСервере()
	Если ТипДокумента = "Табличный" Тогда
		Документ = ТабличныйДокумент;
	ИначеЕсли ТипДокумента = "Текстовый" Тогда
		ТекстJSON = ПолучитьJSONНаСервере();

		Документ = Новый ТекстовыйДокумент;
		Документ.УстановитьТекст(ТекстJSON);
	КонецЕсли;
	
	АдресМакетаИзменений = ПараметрыСеанса.МОД_АдресМакетаИзменений.Получить(ИмяМодифицируемойФормы);
	Если АдресМакетаИзменений = Неопределено Тогда
		Соответствие = Новый Соответствие(ПараметрыСеанса.МОД_АдресМакетаИзменений);
		Соответствие.Вставить(ИмяМодифицируемойФормы, ПоместитьВоВременноеХранилище(Документ, Новый УникальныйИдентификатор));
		
		ПараметрыСеанса.МОД_АдресМакетаИзменений = Новый ФиксированноеСоответствие(Соответствие);
	Иначе
		ПоместитьВоВременноеХранилище(Документ, АдресМакетаИзменений);
	КонецЕсли;
	
	Модифицированность = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьИзменения(Команда)
	ОбработчикПродолжения = Новый ОписаниеОповещения("ЗагрузитьИзмененияПослеПодтверждения", ЭтаФорма);
	Если Модифицированность Тогда
		ПоказатьВопрос(ОбработчикПродолжения, НСтр("ru = 'Несохраненные изменения будут потеряны. Продолжить?'"), РежимДиалогаВопрос.ДаНет);
	Иначе
		ВыполнитьОбработкуОповещения(ОбработчикПродолжения);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьИзмененияПослеПодтверждения(РезультатВопроса, ДополнительныеПараметры) Экспорт
	Если РезультатВопроса = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли;
	
	ОбработчикПродолжения = Новый ОписаниеОповещения("ЗагрузитьИзмененияПослеВыбораНастройки", ЭтаФорма);
	СписокВыбора = ПолучитьСписокИзмененныхФорм();
	СписокВыбора.ПоказатьВыборЭлемента(ОбработчикПродолжения);
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьИзмененияПослеВыбораНастройки(ВыбранныйЭлемент, ДополнительныеПараметры) Экспорт
	Если ВыбранныйЭлемент <> Неопределено Тогда
		ИмяМодифицируемойФормы = ВыбранныйЭлемент.Значение;
		ЗагрузитьИзмененияФормы();
		Модифицированность = Ложь;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьИзмененияФормы()
	СтруктураФорма = Новый Структура("ИмяФормы", ПараметрыСеанса.МОД_ИмяПоследнейФормы);
	МакетИзменений = МОД_МодификацияУправляемыхФорм.ПолучитьМакетИзменений(СтруктураФорма);
	Если ТипЗнч(МакетИзменений) = Тип("ТабличныйДокумент") Тогда
		ТабличныйДокумент = МакетИзменений;
		ТипДокумента = "Табличный";
	ИначеЕсли ТипЗнч(МакетИзменений) = Тип("ТекстовыйДокумент") Тогда
		ТабличныйДокумент = ПрочитатьJSONТабличногоДокумента(МакетИзменений.ПолучитьТекст());
		ТипДокумента = "Текстовый";
	Иначе
		// по умолчанию
		ТипДокумента = "Текстовый";
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ПолучитьСписокИзмененныхФорм()
	СписокРезультат = Новый СписокЗначений;
	Для Каждого ЭлементКоллекции Из ПараметрыСеанса.МОД_АдресМакетаИзменений Цикл
		СписокРезультат.Добавить(ЭлементКоллекции.Ключ);
	КонецЦикла;
	
	СписокРезультат.СортироватьПоЗначению();
	Возврат СписокРезультат;
КонецФункции

&НаКлиенте
Процедура УдалитьИзменения(Команда)
	ОбработчикПродолжения = Новый ОписаниеОповещения("УдалитьИзмененияПослеПодтверждения", ЭтаФорма);
	ПоказатьВопрос(ОбработчикПродолжения, НСтр("ru = 'Вы действительно хотите удалить изменения?'"), РежимДиалогаВопрос.ДаНет);
КонецПроцедуры

&НаКлиенте
Процедура УдалитьИзмененияПослеПодтверждения(РезультатВопроса, ДополнительныеПараметры) Экспорт
	Если РезультатВопроса = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли;
	
	УдалитьИзмененияНаСервере();
КонецПроцедуры

&НаСервере
Процедура УдалитьИзмененияНаСервере()
	Соответствие = Новый Соответствие(ПараметрыСеанса.МОД_АдресМакетаИзменений);
	Соответствие.Удалить(ИмяМодифицируемойФормы);
	
	ПараметрыСеанса.МОД_АдресМакетаИзменений = Новый ФиксированноеСоответствие(Соответствие);
КонецПроцедуры
